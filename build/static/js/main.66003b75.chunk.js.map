{"version":3,"sources":["TableBody.js","Table.js","SideNav.js","Map.js","ToggleSwitch.js","images/dark-map.svg","images/light-map.svg","Nav.js","App.js","index.js"],"names":["TableBody","obj","quakes","invertedMode","mode","Object","keys","length","result","map","quake","index","className","href","properties","url","target","place","mag","date","time","Date","toString","felt","containsNext","json","next","Table","link","setQuakes","useState","page","setPage","handleClick","axios","get","then","res","data","type","disabled","previous","onClick","SideNav","setLink","setMode","event","value","style","textAlign","name","id","transform","document","getElementsByName","forEach","radioButton","checked","Map","mapRef","useRef","coords","setCoords","setMap","useEffect","coordinates","geometry","H","window","coord","marker","Marker","lat","lng","addObject","defaultLayers","service","Platform","apikey","createDefaultLayers","mapObj","current","vector","normal","center","zoom","pixelRatio","devicePixelRatio","addEventListener","getViewPort","resize","mapevents","Behavior","MapEvents","ref","height","ToggleSwitch","title","toUpperCase","slice","Nav","src","darkMap","lightMap","App","baseURL","matchMedia","matches","body","color","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66003b75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst isEmpty = (obj) =>{\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nconst parseDate = (date) =>{\r\n  return new Date(date).toString();\r\n}\r\n\r\nconst TableBody = ({quakes, mode}) =>{\r\n  const invertedMode = mode === 'dark' ? 'light' : 'dark';\r\n  if(!isEmpty(quakes)){\r\n    return(\r\n      quakes.result.map((quake, index) =>{\r\n        return(\r\n          <tr key = {index}>\r\n            <th>{index + 1}</th>\r\n            <td><a className = {`text-${invertedMode}`} href = {quake.properties.url} target = \"_blank\">{quake.properties.place}</a></td>\r\n            <td>{quake.properties.mag}</td>\r\n            <td>{parseDate(quake.properties.time)}</td>\r\n            <td>{quake.properties.felt === null ? 0 : quake.properties.felt}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    )\r\n  }\r\n  else{\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport TableBody from './TableBody';\r\n\r\nconst containsNext = (json) =>{\r\n  if(json.next){\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst containsPrev = (json) =>{\r\n  if(json.previous){\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst Table = ({link, mode, setQuakes, quakes}) =>{\r\n  const invertedMode = mode === 'dark' ? 'light' : 'dark';\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handleClick = (page) =>{\r\n    setPage(page);\r\n    setQuakes({});\r\n    axios.get(`${link}?page=${page}`)\r\n      .then(res =>{\r\n        const json = res.data;\r\n        setQuakes(json);\r\n      })\r\n  }\r\n\r\n  return(\r\n      <div className=\"container\">\r\n        <h2 className = {`text-${invertedMode}`}>Earthquake Details</h2>\r\n        <p className = {`text-${invertedMode}`}>Following are the recent data about the earthquake happened all around the globe</p>\r\n        <table className={`table table-striped table-${mode}`}>\r\n          <thead className={`thead-${invertedMode}`}>\r\n            <tr>\r\n             <th >#</th>\r\n              <th>Place</th>\r\n              <th>Magnitude</th>\r\n              <th>Time</th>\r\n              <th>No of people feeled</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <TableBody quakes = {quakes} mode = {mode}/>\r\n          </tbody>\r\n        </table>\r\n        <div className = \"buttons\">\r\n          <button className={`btn btn-${invertedMode}`} type=\"button\" disabled = {!containsPrev(quakes)} onClick = {() => {handleClick(page - 1)}}>&#8249;</button>\r\n          <button className={`btn btn-${invertedMode}`} type=\"button\" disabled = {!containsNext(quakes)} onClick = {() => {handleClick(page + 1)}}>&#8250;</button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst SideNav = ({link, setLink, mode, setMode}) =>{\r\n  const invertedMode = mode === \"dark\" ? \"light\" : \"dark\";\r\n  const handleClick = (event) =>{\r\n    const mag = event.target.value;\r\n    setLink(`${link}${mag}`);\r\n  }\r\n\r\n  const reset = () =>{\r\n    const options = document.getElementsByName('options');\r\n    options.forEach((radioButton) =>{\r\n      radioButton.checked = false;\r\n    });\r\n    setLink(link);\r\n  }\r\n  return(\r\n    <div>\r\n      <nav className = \"nav-wrapper\">\r\n        <h1 className={`h4 text-${invertedMode}`} style={{textAlign: \"center\"}}>Filter through magnitude</h1>\r\n        <div className={`form-check text-${invertedMode}`} >\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"options\" id=\"flexRadioDefault1\" value=\"1.0\" onClick = {handleClick}/>\r\n          <label className={`form-check-label text-${invertedMode}`}>\r\n            Magnitude 1.0\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check\">\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"options\" id=\"flexRadioDefault2\" value=\"2.5\" onClick = {handleClick}/>\r\n          <label className={`form-check-label text-${invertedMode}`}>\r\n            Magnitude 2.5\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check\">\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"options\" id=\"flexRadioDefault2\" value=\"4.5\" onClick = {handleClick}/>\r\n          <label className={`form-check-label text-${invertedMode}`}>\r\n            Magnitude 4.5\r\n          </label>\r\n        </div>\r\n        <button className={`btn btn-${invertedMode}`} type=\"button\" style = {{transform: 'scale(0.7)'}} onClick = {reset}>Reset</button>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideNav;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\n\r\nconst isEmpty = (obj) =>{\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nconst Map = ({quakes}) =>{\r\n  const mapRef = useRef();\r\n  const [coords, setCoords] = useState([]);\r\n  const [map, setMap] = useState({});\r\n  useEffect(() =>{\r\n    const coordinates = quakes.result.map(quake =>{\r\n      return [quake.geometry.coordinates[1], quake.geometry.coordinates[0]];\r\n    })\r\n    setCoords(coordinates);\r\n  }, [quakes])\r\n\r\n  useEffect(() =>{\r\n    const H = window.H;\r\n    if(coords.length && !isEmpty(map)){\r\n      coords.forEach(coord =>{\r\n        const marker = new H.map.Marker({lat:coord[0], lng:coord[1]});\r\n        map.addObject(marker);\r\n      })\r\n    }\r\n  }, [coords])\r\n\r\n  useEffect(() =>{\r\n    const H = window.H;\r\n    const platform = new H.service.Platform({\r\n      apikey: \"0_vO-CK8XwH6Z5pITpgI5DZeOEn-auKHhn_7kvLQkc4\"\r\n    })\r\n    const defaultLayers = platform.createDefaultLayers();\r\n    const mapObj = new H.Map(\r\n      mapRef.current,\r\n      defaultLayers.vector.normal.map,\r\n      {\r\n        center: { lat: 47.6062, lng: -122.3321 },\r\n        zoom: 4,\r\n        pixelRatio: window.devicePixelRatio || 1\r\n      }\r\n    );\r\n    setMap(mapObj);\r\n    window.addEventListener('resize', () => mapObj.getViewPort().resize());\r\n    const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(mapObj));\r\n  },[])\r\n  return(\r\n    <div className = \"map-wrapper\" id=\"map\">\r\n      <div ref={mapRef} style={{  height: \"500px\" }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nconst ToggleSwitch = ({mode, setMode}) =>{\r\n  const invertedMode = mode === 'dark' ? 'light' : 'dark';\r\n  const title = invertedMode[0].toUpperCase() + invertedMode.slice(1,invertedMode.length);\r\n\r\n  const handleClick = (event) =>{\r\n    if(mode === 'dark'){\r\n      setMode('light');\r\n    }\r\n    else{\r\n      setMode('dark');\r\n    }\r\n  }\r\n  return(\r\n    <button type=\"button\" onClick = {handleClick} className={`btn btn-${invertedMode}`}>{title}</button>\r\n  )\r\n}\r\n\r\nexport default ToggleSwitch;\r\n","export default __webpack_public_path__ + \"static/media/dark-map.a4a3e1d0.svg\";","export default __webpack_public_path__ + \"static/media/light-map.58bd2c7b.svg\";","import React from 'react';\r\nimport ToggleSwitch from './ToggleSwitch';\r\nimport darkMap from './images/dark-map.svg';\r\nimport lightMap from './images/light-map.svg';\r\nconst Nav = ({mode, setMode}) =>{\r\n  const invertedMode = mode === 'dark' ? 'light' : 'dark';\r\n  return(\r\n    <div className = {`top-nav border-top border-bottom border-${invertedMode} navbar navbar-expand-lg navbar-${invertedMode} bg-${mode}`}>\r\n      <h1 className = {`h2 text-${invertedMode}`}>Quaker App</h1>\r\n      <div className = \"top-nav__right\">\r\n        <ToggleSwitch mode = {mode} setMode = {setMode}/>\r\n        {\r\n          invertedMode === 'dark' ?\r\n            <a href = \"#map\"><img src = {darkMap} style = {{height: \"1.5em\"}}/></a>\r\n          :\r\n            <a href = \"#map\"><img src = {lightMap} style = {{height: \"1.5em\"}}/></a>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport Table from './Table';\nimport SideNav from './SideNav';\nimport Map from './Map';\nimport Nav from './Nav';\nfunction App() {\n  const baseURL = '/api/quakes/';\n  const [link, setLink] = useState(baseURL);\n  const [mode, setMode] = useState('light');\n  const [quakes, setQuakes] = useState({});\n  const isEmpty = (obj) =>{\n    return Object.keys(obj).length === 0;\n  }\n\n  useEffect(() =>{\n    let mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if(mql.matches){\n      setMode('dark');\n    }\n    else{\n      setMode('light');\n    }\n  },[])\n\n  useEffect(() =>{\n    axios.get(link)\n      .then(res =>{\n        const json = res.data;\n        setQuakes(json);\n      })\n  }, [link])\n\n  useEffect(() =>{\n    document.body.className = `bg-${mode}`;\n  }, [mode])\n  return (\n    <>\n      {\n        isEmpty(quakes) ?\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\n        :\n        <>\n          <Nav mode = {mode} setMode = {setMode}/>\n          <main>\n            <SideNav link = {baseURL} setLink = {setLink} mode = {mode}/>\n            <Table link = {link} mode = {mode} setQuakes = {setQuakes} quakes = {quakes}/>\n          </main>\n          <section>\n            <Map quakes = {quakes}/>\n          </section>\n        </>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}